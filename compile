#!/bin/bash

SIZES=(512 1024 2048 4096)
POLYBENCH=( "2DCONV" "3DCONV" "ATAX" "BICG" "2MM" "3MM" )

benchmark_cpu () {
    for kernel in "${POLYBENCH[@]}"
    do
        for size in "${SIZES[@]}"
        do
            BENCH_NAME=Polybench/${kernel} SIZE=${size} RUNS=3 make run-cpu
        done
    done
}

benchmark_omp_gpu () {
    for kernel in "${POLYBENCH[@]}"
    do
        for size in "${SIZES[@]}"
        do
            BENCH_NAME=Polybench/${kernel} SIZE=${size} RUNS=3 make run-omp-gpu
        done
    done
}

benchmark_omp_cpu () {
    for kernel in "${POLYBENCH[@]}"
    do
        for size in "${SIZES[@]}"
        do
            BENCH_NAME=Polybench/${kernel} SIZE=${size} RUNS=3 make run-omp-cpu
        done
    done
}

llvm_mca () {
    for kernel in "${POLYBENCH[@]}"
    do
        echo "[INFO] Getting LLVM-MCA data from Polybench/${kernel}"
        mkdir -p logs/$kernel
        gcc -S benchmarks/Polybench/${kernel}/src/*.c -I benchmarks/common/ -DRUN_CPU_SEQ -DLLVM_MCA -o /dev/stdout \
            | llvm-mca --iterations=1 > logs/${kernel}/llvm_mca_1.log
        gcc -S benchmarks/Polybench/${kernel}/src/*.c -I benchmarks/common/ -DRUN_CPU_SEQ -DLLVM_MCA -o /dev/stdout \
            | llvm-mca --iterations=128 > logs/${kernel}/llvm_mca_128.log
    done
}

test_all() {
    for kernel in "${POLYBENCH[@]}"
    do
        BENCH_NAME=Polybench/${kernel} make test
    done
}

# usage: ./compile test 2DCONV
test() {
    kernel="$1"
    BENCH_NAME=Polybench/${kernel} make test
}

"$@"

#!/bin/bash

SIZES=(512 1024 2048 4096)

FAST_KERNELS=(
    "Polybench/2DCONV"
    "Polybench/ATAX"
    "Polybench/BICG"
    "Polybench/GESUMMV"
    "Polybench/MVT"
)
N_FAST_RUNS=25

SLOW_KERNELS=(
    "Polybench/2MM"
    "Polybench/3DCONV"
    "Polybench/3MM"
    "Polybench/CORR"
    "Polybench/COVAR"
    "Polybench/FDTD-2D"
    "Polybench/GEMM"
    "Polybench/GRAMSCHM"
    "Polybench/SYR2K"
    "Polybench/SYRK"
)
N_SLOW_KERNELS=5

# Arguments:
#   - the make target name, e.g. "compile-cpu"
__invoke_make() {
    # fast kernels
    for kernel in "${FAST_KERNELS[@]}"
    do
        for size in "${SIZES[@]}"
        do
            BENCH_NAME=${kernel} SIZE=${size} RUNS=${N_FAST_RUNS} make $1
        done
    done

    # slow kernels
    for kernel in "${SLOW_KERNELS[@]}"
    do
        for size in "${SIZES[@]}"
        do
            BENCH_NAME=${kernel} SIZE=${size} RUNS=${N_SLOW_KERNELS} make $1
        done
    done
}

debug_cpu () {
    __invoke_make "debug"
}

build_cpu () {
    __invoke_make "compile-cpu"
}

build_omp_cpu () {
    __invoke_make "compile-omp-cpu"
}

build_omp_gpu () {
    __invoke_make "compile-omp-gpu"
}

benchmark_cpu () {
    __invoke_make "run-cpu"
}

benchmark_omp_cpu () {
    export OMP_NUM_THREADS=4
    export OMP_PLACES=cores
    export OMP_PROC_BIND=close
    export OMP_SCHEDULE=static
    export OMP_DYNAMIC=false
    __invoke_make "run-omp-cpu"
}

benchmark_omp_gpu () {
    __invoke_make "run-omp-gpu"
}

bench() {
    benchmark_cpu
    benchmark_omp_cpu
    benchmark_omp_gpu
}

llvm_mca () {
    SIZES=(2048)
    __invoke_make "llvm-mca"
}

test_all() {
    SIZES=(1024)
    __invoke_make "test"
}

# usage: ./compile test Polybench/2DCONV
test() {
    kernel="$1"
    BENCH_NAME=${kernel} make test
}

"$@"
